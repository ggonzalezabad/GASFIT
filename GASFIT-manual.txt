This short manual explains the basic functionality of GASFIT code.
This code was developed by Gonzalo Gonzalez Abad taking as starting point
Kelly Chance gasbeta at the Smithsonian Astrophysical Observatory.
This code may be redistributed but please we kindly ask for you to share with
as any improvements or bugs you may detect.
Contact: Gonzalo Gonzalez Abad (ggonzalezabad@cfa.harvard.edu)

The main goal of the code is to produce non-linear spectral fits of direct
radiances. The main differences with gasbeta are:
1. It is writen in FORTRAN90
2. Is fully dynamic. Nowhere in the code are hard-wired parameters that require
   fine tuning by users.
3. Enhanced flexibility to define fitting parameters and their cross sections.
4. New (still to be refined) output files

Test code ships with example:
Script: f90-test.sh
Input files: gasfit.inp
      	     Input_file1.txt
      	     sao2010_solref_air_380_480.dat
	     my_ring.txt
	     my_o3.txt
	     my_no2.txt
	     my_io.txt
	     my_h2o.txt
Output files: Output_file1_test.txt
	      Output_file2_test.txt
	      Output_file3_test.txt
	      Output_file4_test.txt
	      Output_file5_test.txt

LIBRARY DEPENDENCIES: None
COMPILERS TESTED: gfortran (v6.2.0)

INSTALLATION:
1. The following files need to be present for the code to compile and
run: main.f90 gasfit_module.f90 f90<xxx>.sh(running script) gasfit<xxx>.inp(control file)
2. Set up with the right permission (to execute) the f90<xxx>.sh script and type:
   ./f90<xxx>.sh
   The code should compile and run but before going too far keep reading so you have all the inputs
      well set up.

DESCRIPTION OF CONTROL FILES:
1. f90<xxx>.sh (example provided f90-test.sh):
   Line 1. Comment
   Line 2. Compiler command: debug flags
   Line 3. Compiler command: debug flags
   Line 4. Comment
   Line 5. Compiler command: optimize flags
   Line 6. Compiler command: optimize flags

   Line 8.    Comment
   Line 9-18. Run program in non-interactive mode
   Line 10.   gasfit.inp (Fitting control file)
   Line 11.   Output_file1 (output file to mirror control values and optimized parameters of final fit)
   Line 12.   Output_file2 (output file with geolocation information for fitted pixels)
   Line 13.   Output_file3 (output file with solar fit results)
   Line 14.   Output_file4 (output file with radiance fit results)
   Line 15.   Output_file5 (output file with measure, fit, and residual spectra)
   Line 16.   Input_file1 (input file with spectra to be fitted)
   Line 17.   sao2010_solref_air_380_480.dat (input file with high resolution solar spectrum)

   Line 20.   Comment
   Line 21.   Remove compilation by-products

2. Fitting control file (i.e. gasfit.inp)
   This file provides control over the fittings:
   Line 1. General comment line to be outputed to Output_file1
   Line 2. Comment line explaining the line 3
   Line 3. Number of pixel in each spectrum (npoints), 
   	   Chi-square condition to stop fitting iteration (delchi),
	   Parameter-variation to stop fitting iteration (provar),
	   parameter to variate fitting parameters if autodiff is true (automult)
   Line 4. Logicals for: Verbose_mode, 
   	   yes/no output_file1 mirror, 
	   yes/no output_file5, 
	   yes/no output_file1 mirror, 
	   yes/no autodiff (parameter*automult),
	   yes/no output_file5
   Line 5. Comment line explaining line 6
   Line 6. Logical to perform solar wavelength calibration for each spectrum (iterate_sun)
   	   Logical to weight solar spectrum according to ll_sun and lu_sun (below) (weight_sun)
	   Number of parameters used in solar fit (n_solar_pars) !!! This number has to match the list below
	   Starting spectral pixel for solar fit (ll_sun)
	   Endding spectral pixel for solar fit (lu_sun)
	   Normalization factor for solar spectrum (div_sun)
   Line 7:7+n_solar_pars:
	   1. Index
	   2. Inital value of parameter
	   3. Fit parameter or not
	   4. If not autodiff the use these values to calculate jacobians
	   5. Type of parameter (how it contributes to modelled spectrum):
	      Scp (Scaling polynomial)
	      Bsp (Baselane polynimial)
	      ALB (Albedo)
	      HWE (Super Gaussian HW1E)
	      SHI (Spectral shift)
	      SQE (Spectral squeeze)
	      SHA (Super Gaussian shape factor)
	      ASY (Super Gaussian asymmetry factor)
	      ad1 (Added first)
	      ble (Beer-Lambert law)
	      ad2 (Added second)
	      us1 (Undersampling 1)
	      us2 (Undersampling 2)
	   6. Parameter factor (ignored for ALB, HWE, SHI, SQE, SHA, and ASY)
	      		       (if Scp or Bsp order of polynomial)
			       (if ad1, ad2, or ble this value is applied to the cross sections:
			           y = y * fact to bring them close to 1 and provide numerical 
				   stability).
	   7. Description (if ad1, ad2 or ble name of file containing cross-section)
    ----
    Follows radiance comment fitting comment line:
    Line x. Logical for yes/no fit radiances (iterate_rad)
    	    Logical for renormalization of radiance (renorm)
	    Logical for weighting of radiance (weight_rad) using ll_rad and lu_rad (below)
	    Logical for update initial value of fitting parameters using previous fit (update_pars)
	    Starting spectral pixel for radiance fit (ll_rad)
	    Endding spectral pixel for radiance fit (lu_rad)
	    Radiance normalization factor (div_rad)
	    Phase for calculation of undersampling correction (phase)
	    Number of parameters used in radiance fit (npars)
    Line x+1. Maximum solar zenit angle to process (szamax)
    	      Minimum solar zenit angle to process (szamin)
	      Maximum latitude to process (latmax)
	      Minimum latitude to process (latmin)
	      Maximum cloud flag to process (cldmax)
    Line x+2:x+2+npars Similar to description of solar parameters fitting lines

DESCRIPTION OF OUTPUT FILES:
1. Output_file1: Log of general fitting parameters used follow by a copy of 
   		 gasfit.inp with updated initial values of parameters if requested.
2. Output_file2: Geolocation values for fitted pixels (use index number to match 
   		 results from output files 3,4,and 5)
3. Output_file3: Contains results for wavelength and instrument slit function
   		 calibration. Columns lines report the value of the parameter
		 DColumns the value of the fitting uncertainty of each parameter
		 If iterate_sun then the operation is repeated for each pixel
4. Output_file4: Results of radiance fitting (similar to output_file3)
5. Output_file5: Output of spectra

DESCRIPTION OF INPUT FILES:
1. High resolution solar spectra and cross sections:
   Two columns: 1. Wavlength 2. Cross section value
2. Input_file1: File containing spectra to be fitted.
   The file starts with one the solar spectrum for wavelength calibration of npoints:
   Wavelenghts and Spectrum values

   Then it continues wiht a variable number of spectra containing npoints spectral pixels
   Each entry starts with four lines with this format:
   	1. Pixel# Cloud_flag
	2. Year Month Day Hour Minute Second
	3. Latitude Longitude
	4. Solar Zenith Angle, Solar Azimuth Angle, Viewing Zenith Angle, Viewing Azimuth Angle
   And continues with npoints lines with 2 columns:
   Wavelenghts and Spectrum values



   
   

   
